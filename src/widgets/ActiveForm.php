<?php
namespace evondu\metronic\widgets;

use yii\helpers\Html;
use yii\helpers\ArrayHelper;

/*
use metronic\widgets\ActiveForm
<?php $form = ActiveForm::begin([
    "type"=>ActiveForm::TYPE_INLINE,
    "separated"=>false,
    "stripped"=>true,
    "bordered"=>true,
    'buttons' => [
        Html::submit("Save",['class'=>'btn']),
        Html::button("Back",['class'=>'btn']),
    ]
]); ?>
<?php ActiveForm::end(); ?>
 */
class ActiveForm extends \yii\widgets\ActiveForm
{
    // Buttons align
    const BUTTONS_ALIGN_LEFT = 'left';
    const BUTTONS_ALIGN_RIGHT = 'right';
    // Buttons position
    const BUTTONS_POSITION_TOP = 'top';
    const BUTTONS_POSITION_BOTTOM = 'bottom';
    // Form type
    const TYPE_HORIZONTAL = 'horizontal';
    const TYPE_VERTICAL = 'vertical';
    const TYPE_INLINE = 'inline';

    // Param
    public $type = self::TYPE_HORIZONTAL;
    public $separated = false;
    public $stripped = false;
    public $bordered = false;
    public $inputCol = 4;
    public $buttons = [];
    public $align = self::BUTTONS_ALIGN_LEFT;
    public $position = self::BUTTONS_POSITION_BOTTOM;

    public function init()
    {
        //添加form
        echo Html::beginTag('div', ['class' => 'form']);

        //调用父结构函数
        parent::init(); // TODO: Change the autogenerated stub

        //设置
        switch ($this->type)
        {
            case self::TYPE_HORIZONTAL:
                if ($this->stripped)
                    Html::addCssClass($this->options, 'form-row-stripped');
                if ($this->separated)
                    Html::addCssClass($this->options, 'form-row-seperated');
                if ($this->bordered)
                    Html::addCssClass($this->options, 'form-bordered');
                Html::addCssClass($this->options, 'form-horizontal');
                $this->fieldConfig = ArrayHelper::merge([
                    'labelOptions' => ['class' => 'col-md-3 control-label'],
                    'template' => "{label}\n" . Html::tag('div', "{input}\n{error}\n{hint}", ['class' => "col-md-$this->inputCol"]),
                    ], $this->fieldConfig);
                break;
            case self::TYPE_INLINE:
                Html::addCssClass($this->options, 'form-inline');
                $this->fieldConfig = ArrayHelper::merge([
                    'labelOptions' => ['class' => 'sr-only'],
                    ], $this->fieldConfig);
                break;
        }
        if (!isset($this->fieldConfig['class']))
            $this->fieldConfig['class'] = ActiveField::className();

        //添加actions和form-body
        echo $this->renderActions(self::BUTTONS_POSITION_TOP);
        echo Html::beginTag('div', ['class' => 'form-body']);
    }

    public function run()
    {
        //闭合form-body和actions
        echo Html::endTag('div');
        echo $this->renderActions(self::BUTTONS_POSITION_BOTTOM);

        //调用父结构函数
        parent::run(); // TODO: Change the autogenerated stub

        //闭合form和form-body
        echo Html::endTag('div');
    }

    protected function renderActions($currentPosition)
    {
        if (!empty($this->buttons) && $this->position == $currentPosition){
            $actionsOptions = ['class'=>"form-actions"];
            if($this->position == self::BUTTONS_POSITION_TOP)
                Html::addCssClass($actionsOptions, 'top');
            if($this->align == self::BUTTONS_ALIGN_RIGHT)
                Html::addCssClass($actionsOptions, 'right');
            $colOptions = [];
            switch ($this->type)
            {
                case self::TYPE_HORIZONTAL:
                    preg_match('#col-md-(\d+)#', $this->fieldConfig['labelOptions']['class'], $matches);
                    if (isset($matches[1])) {
                        $offset = $matches[1];
                        Html::addCssClass($colOptions, 'col-md-offset-'.$offset);
                        Html::addCssClass($colOptions, 'col-md-'.(12-$offset));
                    }
                    break;
                default:
                    Html::addCssClass($colOptions, 'col-md-12');
            };

            $buttons = implode("\n", $this->buttons);
            $col = Html::tag("div",$buttons,$colOptions);
            $row = Html::tag("div",$col,['class'=>"row"]);
            $actions = Html::tag("div",$row,['class'=>$actionsOptions]);
            return $actions;
        }

        return '';
    }
}
?>